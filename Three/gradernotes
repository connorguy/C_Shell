Wrote the p3helper.c code myself.
I believe everything works perfectly under all conditions.

Prolog Algorithms
Reader: 
When a reader enters the prolog section the first thing that happens is the protocol type is checked. If the protocol is writer priority, then we will be checking if there are writers qued to enter the db, such that as long as any writers are qued readers will be blocked from going through adding itself to the db. 

Once the reader has determined it is safe to add itself to the db, the reader will "lock" out any other readers or writers from editing the data counters. Reader will then update its readersCount and db semaphore. 

Writer:
When a writer enters the prolog we check which protocol is running. if it is writer priority we "lock" out reader and other writers from changing data counters. Then set a writerPriority semaphore that locks out all readers from going into the db till all writers that are qued are finished writing.

Epilog Algorithms
Reader:
When a reader exits the db it will lock out anyone from modifying data counters. It will decrement the readerCount and if the reader count is zero it will unlock the db for others to go in. 

Writer:
Upon entering the epilog a writer will check the protocol that is running. If the writer priority mode is active then we need to keep track of how many writers leave the que for the db. So the writer exiting locks the data counters decrements the writerCount and if no further writers are qued will post on the writerPriority semaphore which will allow readers to access the db. Then regardless of protocol the writer will post on writing and db allowing the next appropriate customer into the db.
